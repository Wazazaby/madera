// =================== INIT ===================
datasource db {
    provider = "mysql"
    url = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}
// =================== INIT ===================



// =================== ENUMS ===================
enum UsageUnit {
    CENTIMETER
    SQUARE_METER
    LINEAR_METER
    UNIT
}

enum QuotationStatus {
    WAITING
    ACCEPTED
    DENIED
}

enum OrderStatus {
    WAITING
    IN_PRODUCTION
    IN_ASSEMBLY
    IN_DELIVERY
    INSTALLED
}

enum PaymentType {
    AT_SIGNATURE
    AT_CONSTRUCTION_LICENCE_OBTENTION
    AT_SITE_OPENING
    AT_FOUNDATION_COMPLETION
    AT_WALLS_COMPLETION
    AT_WATER_AIR_PUT_OUT
    AT_EQUIPMENT_WORK_COMPLETION
    AT_KEY_HANDING
}
// =================== ENUMS ===================



// =================== ADMINISTRATOR ===================
model Administrator {
    id                  Int                 @default(autoincrement()) @id
    firstName           String
    lastName            String
    email               String              @unique
    password            String
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
    // <==> RELATIONS <==>
    // <==> DOWN <==>
    commercials         Commercial[]
    stockists           Stockist[]
}
// =================== ADMINISTRATOR ===================



// =================== COMMERCIAL ===================
model Commercial {
    id                  Int                 @default(autoincrement()) @id
    firstName           String
    lastName            String
    email               String              @unique
    phoneNumber         String              @db.VarChar(10) @unique
    password            String
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
    // <==> RELATIONS <==>
    // <==> UP <==>
    administrator       Administrator       @relation(fields: [administratorId], references: [id])
    administratorId     Int
    // <==> DOWN <==>
    quotations          Quotation[]
    clients             Client[]
}
// =================== COMMERCIAL ===================



// =================== STOCKIST ===================
model Stockist {
    id                  Int                 @default(autoincrement()) @id
    firstName           String
    lastName            String
    email               String              @unique
    password            String
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
    // <==> RELATIONS <==>
    // <==> UP <==>
    administrator       Administrator       @relation(fields: [administratorId], references: [id])
    administratorId     Int
    // <==> DOWN <==>
    stocks              Stock[]
    providers           Provider[]
}
// =================== STOCKIST ===================



// =================== CLIENT ===================
model Client {
    id                  Int                 @default(autoincrement()) @id
    firstName           String
    lastName            String
    city                String
    postalCode          Int             
    adressLine1         String
    adressLine2         String
    email               String              @unique
    phoneNumber         String              @db.VarChar(10) @unique
    password            String
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
    // <==> RELATIONS <==>
    // <==> UP <==>
    commercial          Commercial          @relation(fields: [commercialId], references: [id])
    commercialId        Int
    // <==> DOWN <==>
    quotations          Quotation[]
}
// =================== CLIENT ===================



// =================== PROVIDER ===================
model Provider {
    id                  Int                 @default(autoincrement()) @id
    name                String
    reference           String              @unique
    logoUrl             String
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
    // <==> RELATIONS <==>
    // <==> DOWN <==>
    stockists           Stockist[]
    components          Component[]
}
// =================== PROVIDER ===================


// =================== COMPONENT ===================
model Component {
    id                  Int                 @default(autoincrement()) @id
    label               String
    reference           String              @unique
    shortDescription    String?             @db.Text
    description         String              @db.MediumText
    unit                UsageUnit        
    price               Float
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
    // <==> RELATIONS <==>
    // <==> UP <==>
    provider            Provider            @relation(fields: [providerId], references: [id])
    providerId          Int
    // <==> DOWN <==>
    modules             Module[]
}
// =================== COMPONENT ===================



// =================== MODULE ===================
model Module {
    id                  Int                 @default(autoincrement()) @id
    label               String
    reference           String              @unique
    shortDescription    String?             @db.Text
    description         String              @db.MediumText
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
    // <==> RELATIONS <==>
    // <==> DOWN <==>
    components          Component[]
    quotations          Quotation[]
}
// =================== MODULE ===================



// =================== STOCK ===================
model Stock {
    id                  Int                 @default(autoincrement()) @id
    quantity            Int
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
    // <==> RELATIONS <==>
    // <==> UP <==>
    stockist            Stockist            @relation(fields: [stockistId], references: [id])
    stockistId          Int
    component           Component           @relation(fields: [componentId], references: [id])
    componentId         Int
}
// =================== STOCK ===================



// =================== QUOTATION ===================
model Quotation {
    id                  Int                 @default(autoincrement()) @id
    label               String
    shortDescription    String?             @db.Text
    status              QuotationStatus
    price               Float
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
    // <==> RELATIONS <==>
    // <==> UP <==>
    commercial          Commercial          @relation(fields: [commercialId], references: [id])
    commercialId        Int
    client              Client              @relation(fields: [clientId], references: [id])
    clientId            Int
    // <==> DOWN <==>
    orders              Order[]
    modules             Module[]
}
// =================== QUOTATION ===================



// =================== ORDER ===================
model Order {
    id                  Int                 @default(autoincrement()) @id
    status              OrderStatus
    totalPaid           Float
    // <==> RELATIONS <==>
    // <==> UP <==>
    quotation           Quotation           @relation(fields: [quotationId], references: [id])
    quotationId         Int
    // <==> DOWN <==>
    payments            Payment[]
}
// =================== ORDER ===================



// =================== PAYMENT ===================
model Payment {
    id                  Int                 @default(autoincrement()) @id
    type                PaymentType
    total               Float
    currentlyPaid       Float
    leftToPay           Float
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
    // <==> RELATIONS <==>
    // <==> UP <==>
    order               Order               @relation(fields: [orderId], references: [id])
    orderId             Int
}
// =================== PAYMENT ===================